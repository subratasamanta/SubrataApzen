<!-- add implements="forceCommunity:availableForAllPageTypes" to surface the component in community builder -->
<aura:component controller="LightningLoginFormControllerClone" implements="forceCommunity:availableForAllPageTypes" access="global">
   
    <aura:attribute name="showError" type="Boolean" required="true" description="" default="false" access="private"/>
    <aura:attribute name="errorMessage" type="String" required="false" description="" access="private"/>
    <aura:attribute name="startUrl" type="String" required="false" description="The url you go to after a successful login" />
    <aura:attribute name="usernameLabel" type="String" required="false" default="Email"/>
    <aura:attribute name="passwordLabel" type="String" required="false" default="Password"/>
    <aura:attribute name="loginButtonLabel" type="String" required="false" default="Login"/>
    
    <aura:attribute name="forgotPasswordLabel" type="String" required="false" default="Forgot your password?"/>
    <aura:attribute name="selfRegisterLabel" type="String" required="false" default="Not yet registered?"/>
    <aura:attribute name="forgotPasswordUrl" type="String" required="false" default="/ForgotPassword"/>
    <aura:attribute name="selfRegisterUrl" type="String" required="false" default="/SelfRegister"/>
    
    <aura:attribute name="isUsernamePasswordEnabled" type="Boolean" access="private"/>
    <aura:attribute name="isSelfRegistrationEnabled" type="Boolean" access="private"/>
    <aura:attribute name="communityForgotPasswordUrl" type="String" access="private"/>
    <aura:attribute name="communitySelfRegisterUrl" type="String" access="private"/>
    <aura:attribute name="logoUrl" type="String" access="private"/>
   
    
    <aura:registerevent name="sitePropagatedStartUrl" type="c:setStartUrl"/>
    <aura:handler name="init" value="{!this}" action="{!c.initialize}"/>
    <aura:dependency resource="c:setStartUrl" type="EVENT"/>
    <aura:dependency resource="siteforce:registerQueryEventMap" type="EVENT"/>
    <aura:handler event="c:setStartUrl" action="{!c.setStartUrl}"/>

    <div class="loginContent">
        <aura:renderIf isTrue="{!v.isUsernamePasswordEnabled}">
            <!--<span>
                <aura:renderIf isTrue="{!v.showError}">
                    <div id="error">
                        <ui:outputRichText value="{!v.errorMessage}"/>
                    </div>
                </aura:renderIf>
            </span>  -->       
            <div class="slds-large-size_12-of-12 wrapper">
                <!-- <div class="abbvieLogo"></div> /DudopaHCPPortal-->
                <img aura:id ="logoImg" class="img-responsive-header abbvieLogo-login" alt="MEOW" src="{!v.logoUrl}" title="MEOW"></img>
                <div class="welcomeText">
                    Welcome                    
                </div> 
                
                <div id="sfdc_forgot" class="sfdc submitBlock">
                    <aura:renderIf isTrue="{!v.isSelfRegistrationEnabled}">
                        <p style="float:left" ><a href="{!if(v.communitySelfRegisterUrl == null, v.selfRegisterUrl, v.communitySelfRegisterUrl)}">{!v.selfRegisterLabel}</a></p>
                    </aura:renderIf>  
                    <div class="sfdc floatRight">
                        <ui:button aura:id="submitButton" label="{!v.loginButtonLabel}" press="{!c.handleLogin}" class="sfdc_button"/>
                        <span><a href="{!if(v.communityForgotPasswordUrl == null, v.forgotPasswordUrl, v.communityForgotPasswordUrl)}">{!v.forgotPasswordLabel}</a></span>
                    </div>
                    
                </div>
            </div>
             
            <div id="sfdc_username_container" class="sfdc slds-small-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12">                
                <ui:inputText value="" aura:id="username" placeholder="{!v.usernameLabel}" keyup="{!c.onKeyUp}" class="input sfdc_usernameinput sfdc" label="{!v.usernameLabel}" labelClass="assistiveText"/>
            </div>
            <div id="sfdc_password_container" class="sfdc slds-small-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12">
                <ui:inputSecret value="" aura:id="password" placeholder="{!v.passwordLabel}" keyup="{!c.onKeyUp}" class="input sfdc_passwordinput sfdc" label="{!v.passwordLabel}" labelClass="assistiveText"/>
            </div>
            <div class="errorBlock sfdc slds-small-size--12-of-12 slds-medium-size--12-of-12 slds-large-size--12-of-12">
                <span>
                    <aura:renderIf isTrue="{!v.showError}">
                        <div id="error">
                            <ui:outputRichText value="{!v.errorMessage}"/>
                        </div>
                    </aura:renderIf>
                </span>
            </div>
        </aura:renderIf>
    </div>
</aura:component>